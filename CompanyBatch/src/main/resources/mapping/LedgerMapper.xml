<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="junstech.dao.LedgerMapper">
	<resultMap id="BaseResultMap" type="junstech.model.Ledger">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="receiveid" jdbcType="BIGINT" property="receiveid" />
		<result column="companytype" jdbcType="VARCHAR" property="companytype" />
		<result column="financetype" jdbcType="INTEGER" property="financetype" />
		<result column="companyid" jdbcType="BIGINT" property="companyid" />
		<result column="payman" jdbcType="VARCHAR" property="payman" />
		<result column="paydate" jdbcType="TIMESTAMP" property="paydate" />
		<result column="amount" jdbcType="DOUBLE" property="amount" />
		<result column="note" jdbcType="VARCHAR" property="note" />
		<result column="proof" jdbcType="VARCHAR" property="proof" />
	</resultMap>

	<resultMap id="ResultMapWithDetail" extends="BaseResultMap"
		type="junstech.model.Ledger">
		<collection property="supplier" javaType="junstech.model.Supplier">
			<id property="id" column="supplier_id" />
			<id property="supplier" column="supplier_name" />
		</collection>
		<collection property="financetypeinfo" javaType="junstech.model.Financetype">
			<id property="id" column="financetype_id" />
			<id property="name" column="financetype_name" />
		</collection>
		<collection property="customer" javaType="junstech.model.Customer">
			<id property="id" column="customer_id" />
			<id property="name" column="customer_name" />
			<id property="phone" column="customer_phone" />
			<id property="address" column="customer_address" />
		</collection>
	</resultMap>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from ledger
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="junstech.model.Ledger"
		keyProperty="id" useGeneratedKeys="true">
		insert into ledger (receiveid,
		companytype,
		financetype, companyid,
		payman,
		paydate, amount, note,
		proof)
		values (
		#{receiveid,jdbcType=BIGINT},
		#{companytype,jdbcType=VARCHAR},
		#{financetype,jdbcType=INTEGER},
		#{companyid,jdbcType=BIGINT},
		#{payman,jdbcType=VARCHAR},
		#{paydate,jdbcType=TIMESTAMP},
		#{amount,jdbcType=DOUBLE},
		#{note,jdbcType=VARCHAR},
		#{proof,jdbcType=VARCHAR})
	</insert>
	<update id="updateByPrimaryKey" parameterType="junstech.model.Ledger">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update ledger
		<set>
			<if test="receiveid != null "> receiveid = #{receiveid,jdbcType=BIGINT},
			</if>
			<if test="companytype != null and companytype != '' "> companytype = #{companytype,jdbcType=VARCHAR},
			</if>
			<if test="financetype != null "> financetype = #{financetype,jdbcType=INTEGER},
			</if>
			<if test="companyid != null "> companyid = #{companyid,jdbcType=BIGINT},
			</if>
			<if test="payman != null and payman != '' "> payman = #{payman,jdbcType=VARCHAR},
			</if>
			<if test="paydate != null "> paydate = #{paydate,jdbcType=TIMESTAMP},
			</if>
			<if test="amount != null "> amount = #{amount,jdbcType=DOUBLE},
			</if>
			<if test="note != null and note != '' "> note = #{note,jdbcType=VARCHAR},
			</if>
			<if test="proof != null and proof != ''"> proof = #{proof,jdbcType=VARCHAR}
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>

	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select id, receiveid, companytype, financetype, companyid, payman,
		paydate,
		amount, note, proof
		from ledger
		where id = #{id,jdbcType=BIGINT}
	</select>
	<select id="selectAll" resultMap="ResultMapWithDetail">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<include refid="selectAllFactors"></include>
		WHERE ledger.companytype =
		'supplier' OR ledger.companytype =
		'customer'
	</select>

	<sql id="selectAllFactors">
		SELECT
		ledger.id,
		ledger.receiveid,
		ledger.companytype,
		ledger.financetype,
		ledger.companyid,
		ledger.payman,
		ledger.paydate,
		ledger.amount,
		ledger.note,
		supplier.ID supplier_ID ,
		supplier.supplier
		supplier_name,
		customer.ID customer_ID ,
		customer.`name` customer_name,
		customer.address customer_address,
		customer.phone customer_phone,
		financetype.`name` financetype_name,
		financetype.id financetype_id
		FROM
		ledger
		LEFT JOIN supplier ON ledger.companyid = supplier.ID AND
		ledger.companytype = 'supplier'
		LEFT JOIN customer ON ledger.companyid
		= customer.ID AND
		ledger.companytype = 'customer'
		JOIN financetype ON
		ledger.financetype = financetype.id
	</sql>

	<sql id="selectLedger">
		SELECT
		ledger.id,
		ledger.receiveid,
		ledger.companytype,
		ledger.financetype,
		ledger.companyid,
		ledger.payman,
		ledger.paydate,
		ledger.amount,
		ledger.note
		FROM
		ledger
	</sql>

	<select id="selectByPage" resultMap="ResultMapWithDetail"
		parameterType="java.util.Map">
		<include refid="selectAllFactors"></include>
		WHERE (ledger.companytype =
		'supplier' OR ledger.companytype =
		'customer')
		AND
		(ledger.payman LIKE
		CONCAT(CONCAT('%', #{key}),'%') OR
		supplier.supplier
		LIKE
		CONCAT(CONCAT('%', #{key}),'%') OR
		customer.`name`
		LIKE
		CONCAT(CONCAT('%', #{key}),'%') OR
		financetype.`name`
		LIKE
		CONCAT(CONCAT('%', #{key}),'%'))
		<if test="startdate !=null and startdate != ''">
			AND ledger.paydate &gt;= TIMESTAMP(#{startdate})
		</if>
		<if test="enddate !=null and enddate != ''">
			AND ledger.paydate &lt;= TIMESTAMP(#{enddate})
		</if>
		<if test="id !=null and id !=''">
			AND ledger.id = #{id}
		</if>
		order by ledger.paydate desc, ledger.receiveid desc
		limit #{prev} , #{next}
	</select>

	<select id="selectByFields" resultMap="ResultMapWithDetail"
		parameterType="java.util.Map">
		<include refid="selectLedger"></include>
		<where>
			<if test="companytype !=null and companytype != ''">
				ledger.companytype = #{companytype}
			</if>
			<if test="companyid !=null ">
				AND ledger.companyid = #{companyid}
			</if>
			<if test="id !=null ">
				AND ledger.id = #{id}
			</if>
			<if test="financetype !=null ">
				AND ledger.financetype = #{financetype}
			</if>
			<if test="payman !=null and payman != ''">
				ledger.payman = #{payman}
			</if>
		</where>
	</select>
	<select id="selectTotalByFields" resultMap="ResultMapWithDetail"
		parameterType="java.util.Map">
		SELECT
		ledger.id,
		ledger.receiveid,
		ledger.companytype,
		ledger.financetype,
		ledger.companyid,
		ledger.payman,
		ledger.paydate,
		sum(ledger.amount) amount,
		ledger.note,
		ledger.proof,
		financetype.id,
		financetype.`name` financetype_name
		FROM
		ledger
		JOIN financetype ON ledger.financetype = financetype.id
		<where>
			<if test="name !=null and name != ''">
				financetype.`name` = #{name}
			</if>
			<if test="companytype !=null and companytype != ''">
				AND ledger.companytype = #{companytype}
			</if>
			<if test="companyid !=null ">
				AND ledger.companyid = #{companyid}
			</if>
			<if test="financetype !=null ">
				AND ledger.financetype = #{financetype}
			</if>
			<if test="startdate !=null and startdate != ''">
				AND paydate &gt;= TIMESTAMP(#{startdate})
			</if>
			<if test="enddate !=null and enddate != ''">
				AND paydate &lt;= TIMESTAMP(#{enddate})
			</if>
		</where>
	</select>
</mapper>