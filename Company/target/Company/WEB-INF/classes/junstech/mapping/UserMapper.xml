<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="junstech.dao.UserMapper">
	<resultMap id="BaseResultMap" type="junstech.model.User">
		<id column="ID" jdbcType="BIGINT" property="id" />
		<result column="username" jdbcType="VARCHAR" property="username" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="nickname" jdbcType="VARCHAR" property="nickname" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="lastlogintime" jdbcType="TIMESTAMP" property="lastlogintime" />
		<result column="superuser" jdbcType="VARCHAR" property="superuser" />
	</resultMap>

	<resultMap id="ResultMapWithPrivilege" type="junstech.model.User"
		extends="BaseResultMap">
		<collection property="privileges" javaType="list"
			ofType="junstech.model.Privilege">
			<id property="key" column="privilege_key" />
			<id property="id" column="privilege_id" />
			<id property="programid" column="privilege_programid" />
			<id property="privilege" column="privilege_privilege" />
			<association property="criteria" javaType="junstech.model.Criteria">
				<id property="id" column="criteria_id" />
				<id property="name" column="criteria_name" />
			</association>
		</collection>
	</resultMap>

	<sql id="selectUserAll">
		select ID, username, password, nickname, phone, email, superuser,
		create_time,
		lastlogintime
		from user
	</sql>

	<sql id="selectUserAllWithPrivilege">
		SELECT
		`user`.ID,
		`user`.username,
		`user`.`password`,
		`user`.nickname,
		`user`.phone,
		`user`.email,
		`user`.superuser,
		`user`.create_time,
		`user`.lastlogintime,
		criteria.`name` criteria_name,
		privilege.key
		privilege_key,
		privilege.id
		privilege_id,
		privilege.programid
		privilege_programid,
		privilege.privilege
		privilege_privilege,
		criteria.id criteria_id
		FROM
		`user`
		JOIN privilege ON
		`user`.ID =
		privilege.id
		JOIN criteria ON
		privilege.programid =
		criteria.id
	</sql>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from user
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="junstech.model.User">
		insert into user (ID,
		username, password,
		nickname, phone, email,
		create_time,
		lastlogintime,
		superuser
		)
		values (#{id,jdbcType=BIGINT},
		#{username,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{nickname,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{lastlogintime,jdbcType=TIMESTAMP},
		#{superuser,jdbcType=VARCHAR}
		)
	</insert>
	<update id="updateByPrimaryKey" parameterType="junstech.model.User">
		update user
		<set>
			<if test="username != null and username != '' ">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null and password != '' ">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null and nickname != '' ">
				nickname = #{nickname,jdbcType=VARCHAR},
			</if>
			<if test="phone != null and phone != '' ">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="email != null and email != '' ">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null ">
				create_time = #{createTime,jdbcType=VARCHAR},
			</if>
			<if test="lastlogintime != null">
				lastlogintime = #{lastlogintime,jdbcType=TIMESTAMP},
			</if>
			<if test="superuser != null and superuser != '' ">
				superuser = #{superuser,jdbcType=TIMESTAMP},
			</if>
		</set>
		where ID = #{id,jdbcType=BIGINT}
	</update>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		<include refid="selectUserAll" />
		where ID = #{id,jdbcType=BIGINT}
	</select>
	<select id="selectByUserName" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		<include refid="selectUserAll" />
		where username =
		#{username,jdbcType=VARCHAR}
	</select>
	<select id="selectByPrimaryKeyWithPrivilege" parameterType="java.lang.Long"
		resultMap="ResultMapWithPrivilege">
		<include refid="selectUserAllWithPrivilege" />
		where
		`user`.ID =
		#{id,jdbcType=BIGINT}
	</select>
	<select id="selectByUserNameWithPrivilege" parameterType="java.lang.String"
		resultMap="ResultMapWithPrivilege">
		<include refid="selectUserAllWithPrivilege" />
		where
		`user`.username =
		#{username,jdbcType=VARCHAR}
		ORDER BY privilege.programid ASC
	</select>

	<select id="selectAll" resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<include refid="selectUserAll" />
	</select>
	<select id="selectPage" resultMap="BaseResultMap" parameterType="java.util.Map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<include refid="selectUserAll" />
		WHERE
		(username LIKE CONCAT(CONCAT('%', #{key}),'%') OR nickname
		LIKE
		CONCAT(CONCAT('%', #{key}),'%'))
		<if test="id != 0">
			AND ID = #{id}
		</if>
		<if test="startdate !=null and startdate != ''">
			AND lastlogintime &gt;= TIMESTAMP(#{startdate})
		</if>
		<if test="enddate !=null and enddate != ''">
			AND lastlogintime &lt;= TIMESTAMP(#{enddate})
		</if>
		order by lastlogintime desc
		limit #{prev} , #{next}

	</select>

</mapper>