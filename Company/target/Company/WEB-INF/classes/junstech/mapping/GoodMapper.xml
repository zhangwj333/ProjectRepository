<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="junstech.dao.GoodMapper">
	<resultMap id="BaseResultMap" type="junstech.model.Good">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="ID" property="id" jdbcType="INTEGER" />
		<result column="goodname" property="goodname" jdbcType="VARCHAR" />
		<result column="goodsortid" property="goodsortid" jdbcType="INTEGER" />
		<result column="supplierid" property="supplierid" jdbcType="INTEGER" />
	</resultMap>

	<resultMap id="ResultMapWithSupplier" type="junstech.model.Good"
		extends="BaseResultMap">
		<collection property="supplier" javaType="junstech.model.Supplier">
			<id property="id" column="supplier_supplierid" />
			<id property="supplier" column="supplier_supplier" />
		</collection>
		<collection property="product" javaType="junstech.model.Product">
			<id property="id" column="product_ID" />
			<id property="goodname" column="product_goodname" />
		</collection>
	</resultMap>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from good
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="junstech.model.Good">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into good (goodname, goodsortid,
		supplierid)
		values
		(#{goodname,jdbcType=VARCHAR},
		#{goodsortid,jdbcType=INTEGER},
		#{supplierid,jdbcType=INTEGER})
	</insert>
	<update id="updateByPrimaryKey" parameterType="junstech.model.Good">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update good
		set goodname = #{goodname,jdbcType=VARCHAR},
		goodsortid =
		#{goodsortid,jdbcType=INTEGER}
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithSupplier"
		parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<include refid="selectAllFactors"></include>
		where good.ID =
		#{id,jdbcType=INTEGER}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<include refid="selectAllFactors"></include>
		from good
	</select>
	<sql id="selectAllFactors">
		SELECT
		good.ID ,
		good.goodname,
		good.goodsortid,
		good.supplierid,
		supplier.supplier supplier_supplier,
		supplier.ID supplier_supplierid, 
		product.goodname product_goodname,
		product.ID product_ID 
		FROM
		good
		JOIN supplier ON good.supplierid = supplier.ID 
		JOIN product ON good.goodsortid = product.ID 
	</sql>
	
	<select id="selectAllGoods" resultMap="ResultMapWithSupplier"
		parameterType="java.util.Map">
		<include refid="selectAllFactors"></include>
		WHERE good.ID > 0
	</select>
	
	<select id="selectByPage" resultMap="ResultMapWithSupplier"
		parameterType="java.util.Map">
		<include refid="selectAllFactors"></include>
		WHERE
		(good.goodname LIKE
		CONCAT(CONCAT('%', #{key}),'%') OR
		supplier.supplier LIKE
		CONCAT(CONCAT('%', #{key}),'%'))
		<if test="id != 0">
			AND ID = #{id}
		</if>
		limit #{prev} , #{next}
	</select>
</mapper>