<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="junstech.dao.InventoryMapper">
	<resultMap id="BaseResultMap" type="junstech.model.Inventory">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="ID" property="id" jdbcType="BIGINT" />
		<result column="goodid" property="goodid" jdbcType="INTEGER" />
		<result column="goodsortid" property="goodsortid" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="price" property="price" jdbcType="DOUBLE" />
		<result column="inventoryqty" property="inventoryqty" jdbcType="BIGINT" />
		<result column="actionid" property="actionid" jdbcType="VARCHAR" />
		<result column="executedate" property="executedate" jdbcType="TIMESTAMP" />
		<result column="type" property="type" jdbcType="VARCHAR" />
		<result column="lastedittime" property="lastedittime" jdbcType="TIMESTAMP" />
		<result column="proof" property="proof" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="ResultMapWithDetail" extends="BaseResultMap"
		type="junstech.model.Inventory">
		<collection property="product" javaType="junstech.model.Product">
			<id property="id" column="product_ID" />
			<id property="goodname" column="product_goodname" />
		</collection>
		<collection property="good" javaType="junstech.model.Good">
			<id property="id" column="good_ID" />
			<id property="goodname" column="good_goodname" />
			<id property="goodsortid" column="good_goodsortid" />
			<id property="supplierid" column="good_supplierid" />
			<association property="supplier" javaType="junstech.model.Supplier">
				<id property="id" column="supplier_ID" />
				<id property="supplier" column="supplier_supplier" />
				<id property="phone" column="supplier_phone" />
				<id property="address" column="supplier_address" />
			</association>
		</collection>
	</resultMap>

	<resultMap id="ResultMapWithStatstic" extends="BaseResultMap"
		type="junstech.model.Inventory">
		<collection property="product" javaType="junstech.model.Product">
			<id property="id" column="product_ID" />
			<id property="goodname" column="product_goodname" />
		</collection>
	</resultMap>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from inventory
		where ID = #{id,jdbcType=BIGINT}
	</delete>

	<delete id="deleteByActionId" parameterType="java.lang.String">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from inventory
		where actionid = #{id,jdbcType=VARCHAR}
	</delete>

	<insert id="insert" parameterType="junstech.model.Inventory">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<selectKey resultType="java.lang.Long" keyProperty="id"
			order="BEFORE">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into inventory (goodid, goodsortid, status, type,
		price, inventoryqty, actionid, executedate, lastedittime
		)
		values
		(#{goodid,jdbcType=INTEGER},
		#{goodsortid,jdbcType=INTEGER},
		#{status,jdbcType=VARCHAR},
		#{type,jdbcType=VARCHAR},
		#{price,jdbcType=DOUBLE},
		#{inventoryqty,jdbcType=BIGINT},
		#{actionid,jdbcType=VARCHAR},
		#{executedate,jdbcType=TIMESTAMP},
		#{lastedittime,jdbcType=TIMESTAMP}
		)
	</insert>
	<update id="updateByPrimaryKey" parameterType="junstech.model.Inventory">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update inventory
		<set>
			<if test="goodid != null ">
				goodid = #{goodid,jdbcType=INTEGER},
			</if>
			<if test="goodsortid != null  ">
				goodsortid = #{goodsortid,jdbcType=INTEGER},
			</if>
			<if test="status != null and status != '' ">
				status = #{status,jdbcType=VARCHAR},
			</if>
			<if test="type != null and type != '' ">
				type = #{type,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				price = #{price,jdbcType=DOUBLE},
			</if>
			<if test="inventoryqty != null">
				inventoryqty = #{inventoryqty,jdbcType=BIGINT},
			</if>
			<if test="actionid != null">
				actionid = #{actionid,jdbcType=VARCHAR},
			</if>
			<if test="executedate != null">
				executedate = #{executedate,jdbcType=TIMESTAMP},
			</if>
			<if test="proof != null and proof != '' ">
				proof = #{proof,jdbcType=VARCHAR}
			</if>
		</set>
		where ID = #{id,jdbcType=BIGINT}
	</update>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithDetail"
		parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<include refid="selectAllFactors"></include>
		where
		inventory.ID =
		#{id,jdbcType=BIGINT}
	</select>
	<select id="selectAll" resultMap="ResultMapWithDetail">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<include refid="selectAllFactors"></include>
		from inventory
	</select>

	<sql id="selectAllFactors">
		SELECT
		inventory.ID,
		inventory.goodid,
		inventory.goodsortid,
		inventory.`status`,
		inventory.price,
		inventory.inventoryqty,
		inventory.actionid,
		inventory.executedate,
		inventory.type,
		inventory.lastedittime,
		inventory.proof,
		product.ID product_ID,
		product.goodname
		product_goodname,
		good.ID good_ID,
		good.goodname good_goodname,
		good.goodsortid good_goodsortid,
		good.supplierid good_supplierid,
		supplier.supplier supplier_supplier,
		supplier.note supplier_note,
		supplier.ID supplier_ID,
		supplier.phone supplier_phone,
		supplier.address supplier_address
		FROM
		inventory
		JOIN good ON
		inventory.goodid = good.ID
		JOIN product ON
		inventory.goodsortid =
		product.ID
		JOIN supplier ON good.supplierid =
		supplier.ID

	</sql>
	<select id="selectByPage" resultMap="ResultMapWithDetail"
		parameterType="java.util.Map">
		<include refid="selectAllFactors"></include>
		WHERE
		(product.goodname LIKE
		CONCAT(CONCAT('%', #{key}),'%') OR
		inventory.`status` LIKE
		CONCAT(CONCAT('%', #{key}),'%') OR
		supplier.supplier
		LIKE
		CONCAT(CONCAT('%', #{key}),'%') OR
		good.goodname
		LIKE
		CONCAT(CONCAT('%', #{key}),'%') OR
		inventory.actionid
		LIKE
		CONCAT(CONCAT('%', #{key}),'%'))
		<if test="startdate !=null and startdate != ''">
			AND inventory.executedate &gt;= TIMESTAMP(#{startdate})
		</if>
		<if test="enddate !=null and enddate != ''">
			AND inventory.executedate &lt;= TIMESTAMP(#{enddate})
		</if>
		<if test="id !=null and id !=''">
			AND inventory.actionid = #{id}
		</if>
		order by inventory.lastedittime desc
		limit #{prev} , #{next}
	</select>

	<sql id="SummaryFactors">
		SELECT
		inventory.ID,
		inventory.actionid,
		inventory.goodid,
		inventory.goodsortid,
		inventory.type,
		inventory.`status`,
		inventory.price,
		sum(inventory.inventoryqty)
		inventoryqty,
		product.ID product_ID,
		product.goodname product_goodname
		FROM
		inventory
		JOIN product ON inventory.goodsortid = product.ID
	</sql>
	<select id="selectSummaryByPage" resultMap="ResultMapWithStatstic"
		parameterType="java.util.Map">
		<include refid="SummaryFactors"></include>
		WHERE
		(product.goodname LIKE
		CONCAT(CONCAT('%', #{key}),'%') OR
		inventory.type LIKE
		CONCAT(CONCAT('%', #{key}),'%'))
		GROUP BY inventory.goodsortid, inventory.type
		order by inventoryqty desc
		limit #{prev} , #{next}
	</select>
	<select id="selectSummary" resultMap="ResultMapWithStatstic"
		parameterType="java.util.Map">
		<include refid="SummaryFactors"></include>
		WHERE
		inventory.goodsortid = #{id}
		AND inventory.type = #{type}
		GROUP BY inventory.goodsortid, inventory.type
	</select>
	<select id="selectForVerifyBatch" resultMap="ResultMapWithStatstic">
		<include refid="SummaryFactors"></include>
		GROUP BY inventory.actionid, inventory.`status`
		order by inventoryqty desc
	</select>
</mapper>